---
description: Documentation Rules
globs: 
alwaysApply: true
---
# Documentation Rules for PowerPoint Automizer

## Documentation Structure

The project documentation is organized into the following files:

1. **README.md**: Contains the documentation structure overview and user guide with installation and usage instructions
2. **PROJECT-OVERVIEW.md**: High-level overview of the project features, architecture, and implementation progress
3. **TECHNICAL-DOCUMENTATION.md**: Detailed technical information about data flow and implementation details

## Documentation Update Guidelines

When making changes to the application, follow these guidelines to ensure documentation stays up to date:

### For All Changes

1. **Identify Documentation Impact**: Determine which documentation files need to be updated based on the change
2. **Maintain Consistency**: Ensure terminology and descriptions are consistent across all documentation files
3. **Update Cross-References**: If renamed or moved, update all references to the affected components

### For New Features

1. **Update Implementation Progress**: Add the new feature to the appropriate phase in PROJECT-OVERVIEW.md
2. **Add Feature Description**: Include a high-level description of the feature in PROJECT-OVERVIEW.md
3. **Document Technical Details**: Add detailed implementation information to TECHNICAL-DOCUMENTATION.md
4. **Update User Guide**: If user-facing, add usage instructions to the User Guide section in README.md

### For Bug Fixes

1. **Document the Fix**: Add the bug and its resolution to the "Current Issues and Resolutions" section in TECHNICAL-DOCUMENTATION.md
2. **Update Status**: Mark previously documented issues as "FIXED" when resolved

### For Refactoring/Architectural Changes

1. **Update Technical Architecture**: Modify the architecture diagrams and descriptions in TECHNICAL-DOCUMENTATION.md
2. **Document Data Flow Changes**: Update data flow diagrams and descriptions if affected
3. **Note API Changes**: Document any changes to API endpoints or request/response structures

### For External Dependencies

1. **Update Requirements**: Update the prerequisites and installation instructions in README.md
2. **Document Integration**: Add integration details to the appropriate section in TECHNICAL-DOCUMENTATION.md

## Documentation Checklist

Before completing work on a feature or fix, check that:

1. [ ] README.md is updated with any user-facing changes
2. [ ] PROJECT-OVERVIEW.md reflects the current implementation status
3. [ ] TECHNICAL-DOCUMENTATION.md contains accurate technical details
4. [ ] All diagrams correctly represent the current architecture
5. [ ] API documentation is accurate and complete
6. [ ] Installation and configuration instructions are up to date

## Style Guidelines

1. **Formatting**: Use Markdown formatting consistently
2. **Headings**: Use proper heading levels (H1 for document title, H2 for major sections, etc.)
3. **Code Blocks**: Use triple backticks with language specification for code examples
4. **Links**: Use relative links to reference other documentation files
5. **Lists**: Use ordered lists for sequential steps and unordered lists for non-sequential items